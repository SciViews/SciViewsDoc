"svr","r","cat","comment"
"+","+","math","addition (binary or unary)"
":",":","ops","Same syntax"
"mean()","base::mean(), collapse::mean()","summary","With argument na.rm = TRUE by default"
"<-","<-","ops","Same syntax"
"methods()","base::methods()","object","Same syntax"
"get_s3_methods()","base::getS3methods()","object","Same syntax"
"-","-","math","subtraction (binary or unary)"
"*","*","math","Same syntax"
"/","/","math","Same syntax"
"^","^","math","Same syntax"
"%/%","%/%","math","Same syntax"
"%%","%%","math","Same syntax"
"%*%","%*%","math","Same syntax"
"abs()","base::abs()","math","Same syntax"
"sign()","base::sign()","math","Same syntax"
"sqrt()","base::sqrt()","math","Same syntax"
"round()","base::round()","math","Same syntax"
"floor()","base::floor()","math","Same syntax"
"ceiling()","base::ceiling()","math","Same syntax"
"trunc()","base::trunc()","math","Same syntax"
"signif()","base::signif()","math","Same syntax"
"exp()","base::exp()","math","Same syntax"
"log()","base::log()","math","Same syntax"
"logb()","base::logb()","math","Same syntax"
"log10()","base::log10()","math","Same syntax"
"log2()","base::log2()","math","Same syntax"
"log1p()","base::log1p()","math","Same syntax"
"expm1()","base::expm1()","math","Same syntax"
"cos()","base::cos()","math","Same syntax"
"sin()","base::sin()","math","Same syntax"
"tan()","base::tan()","math","Same syntax"
"cospi()","base::cospi()","math","Same syntax"
"sinpi()","base::sinpi()","math","Same syntax"
"tanpi()","base::tanpi()","math","Same syntax"
"acos()","base::acos()","math","Same syntax"
"asin()","base::asin()","math","Same syntax"
"atan()","base::atan()","math","Same syntax"
"atan2()","base::atan2()","math","Same syntax"
"cosh()","base::cosh()","math","Same syntax"
"sinh()","base::sinh()","math","Same syntax"
"tanh()","base::tanh()","math","Same syntax"
"acosh()","base::acosh()","math","Same syntax"
"asinh()","base::asinh()","math","Same syntax"
"atanh()","base::atanh()","math","Same syntax"
"min()","base::min()","math","Same syntax"
"max()","base::max()","math","Same syntax"
"range()","base::range()","math","Same syntax"
"pmin()","base::pmin()","math","Same syntax"
"pmax()","base::pmax()","math","Same syntax"
"pmin_int()","base::pmin.int()","math","snake_case version of pmin.int()"
"pmax_int()","base::pmax.int()","math","snake_case version of pmax.int()"
"cummin()","base::cummin()","math","Same syntax"
"cummax()","base::cummax()","math","Same syntax"
"sum()","base::sum()","math","Same syntax"
"prod()","base::prod()","math","Same syntax"
"cumsum()","base::cumsum()","math","Same syntax"
"cumprod()","base::cumprod()","math","Same syntax"
"factorial()","base::factorial()","math","Same syntax"
"lfactorial()","base::lfactorila()","math","Same syntax"
"choose()","base::choose()","math","Same syntax"
"lchoose()","base::lchoose()","math","Same syntax"
"combn()","utils::combn()","distri","Same syntax"
"beta()","base::beta()","math","Same syntax"
"lbeta()","base::lbeta()","math","Same syntax"
"gamma()","base::gamma()","math","Same syntax"
"lgamma()","base::lgamma()","math","Same syntax"
"digamma()","base::digamma()","math","Same syntax"
"trigamma()","base::trigamma()","math","Same syntax"
"psigamma()","base::psigamma()","math","Same syntax"
"complex()","base::complex()","complex","Same syntax"
"as.complex()","base::as.complex()","complex","Same syntax"
"is.complex()","base::is.complex()","complex","Same syntax"
"Re()","base::Re()","complex","Same syntax"
"Im()","base::Im()","complex","Same syntax"
"Mod()","base::Mod()","complex","Same syntax"
"Arg()","base::Arg()","complex","Same syntax"
"Conj()","base::Conj()","complex","Same syntax"
"NA_complex_","base::NA_complex_","complex","Same syntax"
"TRUE","base::TRUE","logical","Same syntax"
"FALSE","base::FALSE","logical","Same syntax"
NA,"base::NA","logical","Same syntax"
"==","base::==","logical","Same syntax"
"!=","base::!=","logical","Same syntax"
"<","base::<","logical","Same syntax"
">","base::>","logical","Same syntax"
"<=","base::<=","logical","Same syntax"
">=","base::>=","logical","Same syntax"
"all_equal()","base::all.equal()","logical","Same syntax"
"identical()","base::identical()","logical","Same syntax"
"attr_all_equal()","base::attr.all.equal()","logical","Same syntax"
"&","base::&","logical","Same syntax"
"|","base::|","logical","Same syntax"
"xor()","base::xor()","logical","Same syntax"
"&&","base::&&","logical","Same syntax"
"||","base::||","logical","Same syntax"
"!","base::!","logical","Same syntax"
"all()","base::all()","logical","Same syntax"
"any()","base::any()","logical","Same syntax"
"is_true()","base::isTRUE()","logical","Same syntax"
"is_false()","base::isFALSE()","logical","Same syntax"
"as.logical()","base::as.logical()","logical","Same syntax"
"is.logical()","base::is.logical()","logical","Same syntax"
"logical()","base::logical()","logical","Same syntax"
"lgl()","rlang::lgl()","logical","Same syntax"
"character()","base::character()","character","Same syntax"
"as.character()","base::as.character()","character","Same syntax"
"is.character()","base::is.character()","character","Same syntax"
"NA_character_","base::NA_character_","character","Same syntax"
"col_black","cli::col_black","cli","Colorize text in black (ANSI)"
"col_blue","cli::col_blue","cli","Colorize text in blue (ANSI)"
"col_cyan","cli::col_cyan","cli","Colorize text in cyan (ANSI)"
"col_green","cli::col_green","cli","Colorize text in green (ANSI)"
"col_magenta","cli::col_magenta","cli","Colorize text in magenta (ANSI)"
"col_red","cli::col_red","cli","Colorize text in red (ANSI)"
"col_white","cli::col_white","cli","Colorize text in white (ANSI)"
"col_yellow","cli::col_yellow","cli","Colorize text in yellow (ANSI)"
"col_grey","cli::col_grey","cli","Colorize text in grey (ANSI)"
"col_silver","cli::col_silver","cli","Colorize text in silver (ANSI)"
"col_br_black","cli::col_br_black","cli","Colorize text in bright black (ANSI)"
"col_br_blue","cli::col_br_blue","cli","Colorize text in bright blue (ANSI)"
"col_br_cyan","cli::col_br_cyan","cli","Colorize text in bright cyan (ANSI)"
"col_br_green","cli::col_br_green","cli","Colorize text in bright green (ANSI)"
"col_br_magenta","cli::col_br_magenta","cli","Colorize text in bright magenta (ANSI)"
"col_br_red","cli::col_br_red","cli","Colorize text in bright red (ANSI)"
"col_br_white","cli::col_br_white","cli","Colorize text in bright white (ANSI)"
"col_br_yellow","cli::col_br_yellow","cli","Colorize text in bright yellow (ANSI)"
"col_none","cli::col_none","cli","Do not colorize text (ANSI)"
"bg_black","cli::bg_black","cli","Colorize background in black (ANSI)"
"bg_blue","cli::bg_blue","cli","Colorize background in blue (ANSI)"
"bg_cyan","cli::bg_cyan","cli","Colorize background in cyan (ANSI)"
"bg_green","cli::bg_green","cli","Colorize background in green (ANSI)"
"bg_magenta","cli::bg_magenta","cli","Colorize background in magenta (ANSI)"
"bg_red","cli::bg_red","cli","Colorize background in red (ANSI)"
"bg_white","cli::bg_white","cli","Colorize background in white (ANSI)"
"bg_yellow","cli::bg_yellow","cli","Colorize background in yellow (ANSI)"
"bg_br_black","cli::bg_br_black","cli","Colorize background in bright black (ANSI)"
"bg_br_blue","cli::bg_br_blue","cli","Colorize background in bright blue (ANSI)"
"bg_br_cyan","cli::bg_br_cyan","cli","Colorize background in bright cyan (ANSI)"
"bg_br_green","cli::bg_br_green","cli","Colorize background in bright green (ANSI)"
"bg_br_magenta","cli::bg_br_magenta","cli","Colorize background in bright magenta (ANSI)"
"bg_br_red","cli::bg_br_red","cli","Colorize background in bright red (ANSI)"
"bg_br_white","cli::bg_br_white","cli","Colorize background in bright white (ANSI)"
"bg_br_yellow","cli::bg_br_yellow","cli","Colorize background in bright yellow (ANSI)"
"bg_none","cli::bg_none","cli","Do not colorize background (ANSI)"
"style_dim","cli::style_dim","cli","Dim style (ANSI)"
"style_blurred","cli::style_blurred","cli","Blurred = dim style (ANSI)"
"style_bold","cli::style_bold","cli","Bold style (ANSI)"
"style_hidden","cli::style_hidden","cli","Hidden style (ANSI)"
"style_inverse","cli::style_inverse","cli","Inverse style (ANSI)"
"style_italic","cli::style_italic","cli","Italic style (ANSI)"
"style_strikethrough","cli::style_strikethrough","cli","Strikethrough style (ANSI)"
"style_underline","cli::style_underline","cli","Underline style (ANSI)"
"style_no_dim","cli::style_no_dim","cli","Stop dim style (ANSI)"
"style_no_blurred","cli::style_no_blurred","cli","Stop blurred style (ANSI)"
"style_no_bold","cli::style_no_bold","cli","Stop bold style (ANSI)"
"style_no_hidden","cli::style_no_hidden","cli","Stop hidden style (ANSI)"
"style_no_inverse","cli::style_no_inverse","cli","Stop style (ANSI)"
"style_no_italic","cli::style_no_italic","cli","Stop italic style (ANSI)"
"style_no_strikethrough","cli::style_no_strikethrough","cli","Stop strikethrough style (ANSI)"
"style_no_underline","cli::style_no_underline","cli","Stop underline style (ANSI)"
"style_reset","cli::style_reset","cli","Remove styles including colors (ANSI)"
"ansi_num_colors","cli::num_ansi_colors","cli","How many colors the (ANSI) terminal supports?"
"ansi_combine_styles","cli::combine_ansi_styles","cli","Combine ANSI styles"
"ansi_make_style","cli::make_ansi_style","cli","Create an ANSI style?"
"ansi_truecolor","cli::truecolor","cli","Create an ANSI style?"
"ansi_palettes","cli::ansi_palettes","cli","Data frame with predefined ANSI palettes"
"ansi_palette_show","cli::ansi_palette_show","cli","Display an ANSI palette"
"ansi_align","cli::ansi_align","cli","Align ANSI strings"
"ansi_columns","cli::ansi_columns","cli","Align ANSI strings into columns"
"ansi_html","cli::ansi_html","cli","Convert ANSI strings into HTML"
"ansi_html_styles","cli::ansi_html_styles","cli","CSS styles for ansi_html()"
"ansi_chartr","cli::ansi_chartr","cli","Translate character in a string"
"ansi_toupper","cli::ansi_toupper","cli","Turn a string into uppercase"
"ansi_tolower","cli::ansi_tolower","cli","Turn a string into lowercase"
"ansi_strtrim","cli::ansi_strtrim","cli","Trim an ANSI string"
"ansi_trimws","cli::ansi_strtrimws","cli","Trim whitespaces in an ANSI string"
"ansi_strwrap","cli::ansi_strwrap","cli","Wrap an ANSI string"
"ansi_strsplit","cli::ansi_strsplit","cli","Split a string retaining ANSI formatings"
"ansi_substr","cli::ansi_substr","cli","Substring of an ANSI strings"
"ansi_substring","cli::ansi_substring","cli","Substring of an ANSI strings"
"ansi_grep","cli::ansi_grep","cli","Regular expressions search for ANSI strings"
"ansi_grepl","cli::ansi_grepl","cli","Logical regular expressions search for ANSI strings"
"ansi_regex","cli::ansi_regex","cli","Regular expression to find ANSI codes"
"ansi_has_any","cli::ansi_has_any","cli","Check if string has ANSI code"
"ansi_nchar","cli::ansi_nchar","cli","Count character in an ANSI string"
"ansi_nzchar","cli::ansi_nzchar","cli","Check for non zero characters ANSI string"
"ansi_simplify","cli::ansi_simplify","cli","Simplify an ANSI string"
"ansi_string","cli::ansi_string","cli","Convert a character string into a cli_ansi_string object"
"ansi_strip","cli::ansi_strip","cli","Eliminate ANSI code from a string"
"ansi_collapse","cli::ansi_collapse","cli","Collapse strings into a single one"
"style_hyperlink","cli::style_hyperlink","cli","Insert an hyperlink in an ANSI string"
"ansi_has_hyperlink_support","cli::ansi_has_hyperlink_support","cli","Does the terminal support ANSI hyperlinks?"
"ansi_hyperlink_types","cli::ansi_has_hyperlink_types","cli","List the types of ANSI hyperlinks supported"
"ansi_hide_cursor","cli::ansi_hide_cursor","cli","Hide the cursor in the terminal"
"ansi_show_cursor","cli::ansi_show_cursor","cli","Show the cursor in the terminal"
"ansi_with_hidden_cursor","cli::ansi_with_hidden_cursor","cli","Temporary hide the cursor in the terminal"
